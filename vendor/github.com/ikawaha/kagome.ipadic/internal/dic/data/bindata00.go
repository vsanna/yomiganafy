package data

import(
	"os"
	"time"
)

var _dicIpaChardefDic = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\xdc\xf1\x4e\xda\x40\x18\x00\xf0\x5e\x15\xe9\x94\x64\xcf\x74\x63\x4c\x19\xc8\x0c\xea\x1f\x66\xcf\xb3\x25\xdb\x3b\x2f\xac\x20\xba\x0d\x65\x80\x6d\x3d\x2a\xbf\x5f\x28\xa5\xd7\xa3\xfd\xae\x77\xfd\x20\xb9\xa4\xbd\xd9\xb7\x3c\xe4\xb3\xef\x59\xe8\x65\xd9\xd7\x72\x7d\xd6\xfd\x38\xf8\x14\x6f\xc7\x37\x9d\xeb\xab\xd8\x1f\x74\x46\x71\xf2\x79\x78\x72\x7d\x77\xf9\xe1\xcb\xb8\x3b\xb9\xbd\x1c\x4c\x87\xfd\x4e\x1c\x5f\x5d\xc4\xe2\x62\x38\x8d\xe7\x71\x12\x8b\x51\xbc\x89\x65\xbd\xd8\x5b\x54\x7e\xa8\x74\x3e\x1d\x0c\x46\x45\xff\x6e\x3a\x1c\x8f\x87\xfd\x5f\x21\x3b\x39\xcd\xca\xf7\x3f\x42\x08\xd9\xdf\xdb\x0f\xc5\x47\xff\x3a\x7e\xb4\x2c\xe8\xac\xb5\xcd\xfe\xa7\x27\x5c\x75\xf4\x7f\xeb\x0f\x4f\x83\x36\xf7\x1b\x6b\xbd\xdb\x13\xf3\x58\x4e\x0f\xd6\x7d\x5f\x3c\x5f\x0a\x00\x00\x00\x00\x00\xd0\x5e\xa9\x27\x12\xd3\x49\x7d\xe5\xf7\xc3\x86\xe9\xf5\xda\x1d\xef\xe8\xb5\xe3\xab\x6a\xd7\xf6\xb5\xbd\xbd\xb4\xdb\x5b\xcb\x2f\xbb\xda\xfb\x00\x69\x92\xee\x27\xa9\xa6\xf3\x6f\xdb\xf3\x33\xcd\x4a\x3d\xfe\x38\x6c\x79\x02\xa9\xcf\xdf\xbc\xed\xaf\x7f\xe5\xfc\x71\xd2\xac\xac\xdb\xac\xba\xc7\xf3\xbe\x5b\x6d\x7f\x1d\xbf\x21\x2d\x76\xf0\xff\x7f\x52\x67\x2a\x00\x00\x00\x00\x00\x00\xe6\xea\x9b\x0f\x2c\xf2\xbc\x7c\x95\x4b\xd1\x40\x98\x3b\x1e\xb3\x78\xd9\xd7\xa0\x92\xea\xe3\x6d\xab\x23\x34\x73\x8f\x91\x96\x5e\x85\x7d\xe4\xbe\x04\x00\x00\x00\x00\x00\x00\x80\x57\x61\x8a\x1e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x78\xab\xea\x7b\xde\x23\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\xd3\x52\x3f\xd9\xb9\x5d\x2a\x5d\xaf\xd4\x5d\x0d\x54\x74\x54\x41\xea\xd8\x9f\xb5\x12\xe3\xf1\xa3\x65\xcc\x9d\xb5\xee\x2b\x6c\xda\xbf\xd0\x7d\xb1\x9a\x9b\xf7\xa4\x0f\x7a\xb3\x1f\x79\xc8\x67\x3f\xb3\x50\xe6\xe7\xf7\xe5\xfa\xac\x2c\x0c\x21\xcc\x97\xb0\xd8\x5e\x7e\x9e\xfb\x1d\x00\x00\xff\xff\x33\x0b\x28\x9c\xa0\x00\x01\x00"

func dicIpaChardefDicBytes() ([]byte, error) {
	return bindataRead(
		_dicIpaChardefDic,
		"dic/ipa/chardef.dic",
	)
}

func dicIpaChardefDic() (*asset, error) {
	bytes, err := dicIpaChardefDicBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dic/ipa/chardef.dic", size: 65696, mode: os.FileMode(420), modTime: time.Unix(1496122634, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

